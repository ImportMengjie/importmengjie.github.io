<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>C++ - Tag - ImportMengjie's Blog</title><link>https://importmengjie.github.io/tags/c++/</link><description>C++ - Tag - ImportMengjie's Blog</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>limengjie@hotmail.com (mengjie)</managingEditor><webMaster>limengjie@hotmail.com (mengjie)</webMaster><lastBuildDate>Sat, 31 Aug 2024 20:34:29 +0800</lastBuildDate><atom:link href="https://importmengjie.github.io/tags/c++/" rel="self" type="application/rss+xml"/><item><title>一些我竟然不知道的C++相关知识 - 这都不知道「2」</title><link>https://importmengjie.github.io/posts/dont-even-know-that_2/</link><pubDate>Sat, 31 Aug 2024 20:34:29 +0800</pubDate><author><name>mengjie</name></author><guid>https://importmengjie.github.io/posts/dont-even-know-that_2/</guid><description>&lt;p>最近一段时间在工作中或看书遇到的一些有意思的知识记录成本文。包括C++正则库中regex_match的坑、shared_ptr的妙用: copy-on-other-reading、协变返回类型、switch case语句break的使用。&lt;/p></description></item><item><title>一些C++从C语言继承的好用特性 - C++基础</title><link>https://importmengjie.github.io/posts/cpp_base_c_feat/</link><pubDate>Sat, 24 Aug 2024 23:24:27 +0800</pubDate><author><name>Author</name></author><guid>https://importmengjie.github.io/posts/cpp_base_c_feat/</guid><description><![CDATA[<p>阅读《嵌入式C语言自我修养 - 从芯片、编译器到操作系统》<sup id="fnref:1"><a href="#fn:1" class="footnote-ref" role="doc-noteref">1</a></sup>这本书时学习到了很多C语言中的有用特性，让人不禁感慨C语言也在与时俱进。这些特性在C++中也完全可以使用，学了也不白学，在工作上有用武之地。另外对于宏定义这种功能可以生成代码增加键盘寿命，相较于C++模板晦涩难懂，宏更直观。这次也一并系统的学习宏并且记录成本文。<strong>不过需要注意的是有些特性并不是C++标准直接支持的，而是编译器支持，所以用这些特性会丧失可移植性</strong>。</p>]]></description></item><item><title>右值、右值引用、万能引用与完美转发 - C++基础</title><link>https://importmengjie.github.io/posts/cpp_base_right_value/</link><pubDate>Sun, 11 Aug 2024 10:38:25 +0800</pubDate><author><name>Author</name></author><guid>https://importmengjie.github.io/posts/cpp_base_right_value/</guid><description><![CDATA[<p>右值引用是C++11标准提出的非常重要概念，正确使用可以提升执行效率。此前已经系统看过很多遍，可惜看一遍忘一遍。此次系统学习记录下来，供日后回忆。主要参考《现代C++语言核心特性解析》<sup id="fnref:1"><a href="#fn:1" class="footnote-ref" role="doc-noteref">1</a></sup>和《Effective Modern C++》<sup id="fnref:2"><a href="#fn:2" class="footnote-ref" role="doc-noteref">2</a></sup>。</p>]]></description></item><item><title>从音频播放C++类的实现学习Linux系统子进程管理</title><link>https://importmengjie.github.io/posts/voice_player_system_programming/</link><pubDate>Tue, 25 Jun 2024 20:06:55 +0800</pubDate><author><name>Author</name></author><guid>https://importmengjie.github.io/posts/voice_player_system_programming/</guid><description>&lt;p>为了实现一个可以及时停止的音频播放类，学习使用fork、execl、setpgid、waitpid和进程组概念。&lt;/p></description></item><item><title>记一次数据竞争导致内存损坏的coredump - 问题诊断</title><link>https://importmengjie.github.io/posts/troubleshooting_data_races_coredump/</link><pubDate>Sun, 12 May 2024 14:53:51 +0800</pubDate><author><name>Author</name></author><guid>https://importmengjie.github.io/posts/troubleshooting_data_races_coredump/</guid><description>&lt;p>此次coredump断断续续查了约两个月才查明原因，迄今为止遇到最棘手的问题，深刻的体会到debug C/C++内存损坏是多么痛苦。为了debug还写了两个内存检测工具，可惜最终还是通过注释代码和人肉检查找到了问题根因，不过自制的检测工具还是能把模拟的demo检测出来问题，还是比较有成就感。&lt;/p></description></item><item><title>一些我竟然不知道的系统相关知识 - 这都不知道「1」</title><link>https://importmengjie.github.io/posts/dont-even-know-that_1/</link><pubDate>Sun, 17 Dec 2023 00:15:58 +0800</pubDate><author><name>Author</name></author><guid>https://importmengjie.github.io/posts/dont-even-know-that_1/</guid><description>&lt;p>最近发现我竟然不知道或理解错误的基础知识，包含i++/++i的左右值问题、无符号与有符号的比较、Linux系统时区设置、coredump文件命名的问题。&lt;/p></description></item><item><title>记一次虚函数二进制兼容问题导致的coredump - 问题诊断</title><link>https://importmengjie.github.io/posts/troubleshooting_guide_vtable-coredump/</link><pubDate>Thu, 21 Sep 2023 14:11:24 +0800</pubDate><author><name>mengjie</name></author><guid>https://importmengjie.github.io/posts/troubleshooting_guide_vtable-coredump/</guid><description>&lt;p>记录一次由于动态链接库提供的含有虚函数的类不兼容导致的诡异coredump。&lt;/p></description></item></channel></rss>