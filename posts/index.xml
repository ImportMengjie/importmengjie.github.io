<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>All Posts - ImportMengjie's Blog</title><link>https://importmengjie.github.io/posts/</link><description>All Posts | ImportMengjie's Blog</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>limengjie@hotmail.com (mengjie)</managingEditor><webMaster>limengjie@hotmail.com (mengjie)</webMaster><lastBuildDate>Tue, 16 Jul 2024 14:23:49 +0800</lastBuildDate><atom:link href="https://importmengjie.github.io/posts/" rel="self" type="application/rss+xml"/><item><title>v4l2 api基本使用流程 - V4l2学习笔记</title><link>https://importmengjie.github.io/posts/v4l2_learning_1/</link><pubDate>Tue, 16 Jul 2024 14:23:49 +0800</pubDate><author>Author</author><guid>https://importmengjie.github.io/posts/v4l2_learning_1/</guid><description>v4l2(video for Linux two)是linux为视频设备提供的一套api接口规范，two表示版本为2。利用该接口应用程序可以从摄像头外设读取一系列图片进行处理。</description></item><item><title>信号的基本概念和信号处置函数 - 《Linux/UNIX系统编程手册》读书笔记【2】</title><link>https://importmengjie.github.io/posts/the_linux_programming_interface_signal/</link><pubDate>Thu, 11 Jul 2024 22:34:45 +0800</pubDate><author>Author</author><guid>https://importmengjie.github.io/posts/the_linux_programming_interface_signal/</guid><description>本文是在阅读《Linux/UNIX系统编程手册》1第20、21、22章做的笔记。一些在Linux系统基本的概念在之前只是泛泛了解，此次系统的</description></item><item><title>进程、进程组和会话、作业控制 - 《Linux/UNIX系统编程手册》读书笔记【1】</title><link>https://importmengjie.github.io/posts/the_linux_programming_interface_thread/</link><pubDate>Tue, 02 Jul 2024 20:18:43 +0800</pubDate><author>Author</author><guid>https://importmengjie.github.io/posts/the_linux_programming_interface_thread/</guid><description>本文是在阅读《Linux/UNIX系统编程手册》1相关内容做的笔记。一些在Linux系统基本的概念在之前只是泛泛了解，此次系统的学习收获颇多</description></item><item><title>从音频播放c++类的实现学习Linux系统子进程管理</title><link>https://importmengjie.github.io/posts/voice_player_system_programming/</link><pubDate>Tue, 25 Jun 2024 20:06:55 +0800</pubDate><author>Author</author><guid>https://importmengjie.github.io/posts/voice_player_system_programming/</guid><description>为了实现一个可以及时停止的音频播放类，学习使用fork、execl、setpgid、waitpid和进程组概念。 需求 之前车端软件播放音频文件</description></item><item><title>书单盘点: 2023年12月～2024年05月</title><link>https://importmengjie.github.io/posts/reading_202312-202406/</link><pubDate>Sun, 09 Jun 2024 17:24:21 +0800</pubDate><author>Author</author><guid>https://importmengjie.github.io/posts/reading_202312-202406/</guid><description>2023年12月，出差海南，闲暇之余，志在饱览诗书，勿使光阴虚度也。 读书目录 1、《大变局：晚清改革五十年》谌旭彬 读书日期：2023.12.0</description></item><item><title>记一次数据竞争导致内存损坏的coredump - 问题诊断</title><link>https://importmengjie.github.io/posts/troubleshooting_data_races_coredump/</link><pubDate>Sun, 12 May 2024 14:53:51 +0800</pubDate><author>Author</author><guid>https://importmengjie.github.io/posts/troubleshooting_data_races_coredump/</guid><description>前置知识 内存管理器 如果想要对内存损坏有一个深刻意识需要对内存分配器有一个初步的认识，接下来对其做基本概念介绍。 堆内存（Heap Memory）</description></item><item><title>一些我竟然不知道的计算机相关知识 - 这都不知道「1」</title><link>https://importmengjie.github.io/posts/dont-even-know-that_1/</link><pubDate>Sun, 17 Dec 2023 00:15:58 +0800</pubDate><author>Author</author><guid>https://importmengjie.github.io/posts/dont-even-know-that_1/</guid><description>i++和++i的左右值问题 i++和++i很常用，之前的理解仅限++i前置++会先自增后进行运算；而i++后置++则会在参与运算完后才会自增。</description></item><item><title>问题诊断系列「1」popen后台符号&amp;导致僵尸进程、空间未满却新建文件失败等</title><link>https://importmengjie.github.io/posts/troubleshooting_guide_1/</link><pubDate>Mon, 04 Dec 2023 11:39:42 +0800</pubDate><author>Author</author><guid>https://importmengjie.github.io/posts/troubleshooting_guide_1/</guid><description><![CDATA[popen后台符号&amp;导致僵尸进程 下面是popen执行shell命令获取命令输出打印到屏幕上的小例子 #include &lt;limits.h&gt;#include &lt;ostream&gt;#include &lt;stdio.h&gt;#include &lt;stdlib.h&gt;#include &lt;iostream&gt; using namespace std; int main(int argc, char *argv[]) { string files;]]></description></item><item><title>从git对象存储模型理解git常用命令</title><link>https://importmengjie.github.io/posts/git_in_detail/</link><pubDate>Mon, 02 Oct 2023 22:06:55 +0800</pubDate><author>Author</author><guid>https://importmengjie.github.io/posts/git_in_detail/</guid><description>本文是从git对象存储模型出发搞懂git常用命令的原理，主要参考了《Git权威指南》1和网上的一些文章234。 基础知识 .git下对象存储模型</description></item><item><title>从文件描述符和打开文件之间的关系重新理解shell重定向</title><link>https://importmengjie.github.io/posts/shell-redirection/</link><pubDate>Sun, 24 Sep 2023 15:14:49 +0800</pubDate><author>mengjie</author><guid>https://importmengjie.github.io/posts/shell-redirection/</guid><description>问题缘起 在使用shell命令时，重定向是一种方便的将命令执行的结果输出到文件中或者将文件内容输入到命令中，其最常用的用法如下: # 输出 ls &amp;gt; output.txt #</description></item></channel></rss>