<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>All Posts - ImportMengjie's Blog</title><link>https://importmengjie.github.io/posts/</link><description>All Posts | ImportMengjie's Blog</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>limengjie@hotmail.com (mengjie)</managingEditor><webMaster>limengjie@hotmail.com (mengjie)</webMaster><lastBuildDate>Sat, 24 Aug 2024 23:24:27 +0800</lastBuildDate><atom:link href="https://importmengjie.github.io/posts/" rel="self" type="application/rss+xml"/><item><title>一些c++从c语言继承的好用特性 - c++基础</title><link>https://importmengjie.github.io/posts/cpp_base_c_feat/</link><pubDate>Sat, 24 Aug 2024 23:24:27 +0800</pubDate><author><name>Author</name></author><guid>https://importmengjie.github.io/posts/cpp_base_c_feat/</guid><description><![CDATA[<p>阅读《嵌入式C语言自我修养 - 从芯片、编译器到操作系统》<sup id="fnref:1"><a href="#fn:1" class="footnote-ref" role="doc-noteref">1</a></sup>这本书时学习到了很多C语言中的有用特性，让人不禁感慨C语言也在与时俱进。这些特性在C++中也完全可以使用，学了也不白学，在工作上有用武之地。另外对于宏定义这种功能可以生成代码增加键盘寿命，相较于C++模版晦涩难懂，宏更直观。这次也一并系统的学习宏并且记录成本文。</p>]]></description></item><item><title>右值、右值引用、万能引用与完美转发 - c++基础</title><link>https://importmengjie.github.io/posts/cpp_base_right_value/</link><pubDate>Sun, 11 Aug 2024 10:38:25 +0800</pubDate><author><name>Author</name></author><guid>https://importmengjie.github.io/posts/cpp_base_right_value/</guid><description><![CDATA[<p>右值引用是c++11标准提出的非常重要概念，正确使用可以提升执行效率。此前已经系统看过很多遍，可惜看一遍忘一遍。此次系统学习记录下来，供日后回忆。主要参考《现代C++语言核心特性解析》<sup id="fnref:1"><a href="#fn:1" class="footnote-ref" role="doc-noteref">1</a></sup>和《Effective Modern C++》<sup id="fnref:2"><a href="#fn:2" class="footnote-ref" role="doc-noteref">2</a></sup>。</p>]]></description></item><item><title>设计模式基础 - 《设计模式的艺术》读书笔记【1】</title><link>https://importmengjie.github.io/posts/design_patterns_1/</link><pubDate>Wed, 07 Aug 2024 22:38:15 +0800</pubDate><author><name>Author</name></author><guid>https://importmengjie.github.io/posts/design_patterns_1/</guid><description><![CDATA[<p>设计模式是我曾经想学但没学，后来不屑于学的技术。工作中遇到项目的重构不会设计模式就显得力不从心了，此次迟来的系统学习期望能带来实际工作中可以用到的启发。主要是阅读刘伟写的《设计模式的艺术:一本实例驱动的设计模式实践指南》<sup id="fnref:1"><a href="#fn:1" class="footnote-ref" role="doc-noteref">1</a></sup>这本书。</p>]]></description></item><item><title>v4l2 api基本使用流程 - V4l2学习笔记</title><link>https://importmengjie.github.io/posts/v4l2_learning_1/</link><pubDate>Tue, 16 Jul 2024 14:23:49 +0800</pubDate><author><name>Author</name></author><guid>https://importmengjie.github.io/posts/v4l2_learning_1/</guid><description><![CDATA[<p>v4l2(video for Linux two)是linux为视频设备提供的一套api接口规范，two表示版本为2。利用该接口应用程序可以从摄像头外设读取一系列图片进行处理。本文主要是实现使用该接口获取摄像头图片保存到本地，以此了解v4l2 api的基本使用方法。后续工作如果需要也要深入了解下各种摄像头、图像参数的意义，进阶的话还想学习内核侧v4l2驱动的编写。参考了网络上的一些博客<sup id="fnref:1"><a href="#fn:1" class="footnote-ref" role="doc-noteref">1</a></sup>、<sup id="fnref:2"><a href="#fn:2" class="footnote-ref" role="doc-noteref">2</a></sup>、<sup id="fnref:3"><a href="#fn:3" class="footnote-ref" role="doc-noteref">3</a></sup>等。</p>]]></description></item><item><title>信号的基本概念和信号处置函数 - 《Linux/UNIX系统编程手册》读书笔记【2】</title><link>https://importmengjie.github.io/posts/the_linux_programming_interface_signal/</link><pubDate>Thu, 11 Jul 2024 22:34:45 +0800</pubDate><author><name>Author</name></author><guid>https://importmengjie.github.io/posts/the_linux_programming_interface_signal/</guid><description><![CDATA[<p>本文是在阅读《Linux/UNIX系统编程手册》<sup id="fnref:1"><a href="#fn:1" class="footnote-ref" role="doc-noteref">1</a></sup>第20、21、22章做的笔记。一些在Linux系统基本的概念在之前只是泛泛了解，此次系统的学习收获颇多。</p>]]></description></item><item><title>进程、进程组和会话、作业控制 - 《Linux/UNIX系统编程手册》读书笔记【1】</title><link>https://importmengjie.github.io/posts/the_linux_programming_interface_process/</link><pubDate>Tue, 02 Jul 2024 20:18:43 +0800</pubDate><author><name>Author</name></author><guid>https://importmengjie.github.io/posts/the_linux_programming_interface_process/</guid><description><![CDATA[<p>本文是在阅读《Linux/UNIX系统编程手册》<sup id="fnref:1"><a href="#fn:1" class="footnote-ref" role="doc-noteref">1</a></sup>相关内容做的笔记。一些在Linux系统基本的概念在之前只是泛泛了解，此次系统的学习收获颇多。</p>]]></description></item><item><title>从音频播放c++类的实现学习Linux系统子进程管理</title><link>https://importmengjie.github.io/posts/voice_player_system_programming/</link><pubDate>Tue, 25 Jun 2024 20:06:55 +0800</pubDate><author><name>Author</name></author><guid>https://importmengjie.github.io/posts/voice_player_system_programming/</guid><description>&lt;p>为了实现一个可以及时停止的音频播放类，学习使用fork、execl、setpgid、waitpid和进程组概念。&lt;/p></description></item><item><title>书单盘点: 2023年12月～2024年05月</title><link>https://importmengjie.github.io/posts/reading_202312-202406/</link><pubDate>Sun, 09 Jun 2024 17:24:21 +0800</pubDate><author><name>Author</name></author><guid>https://importmengjie.github.io/posts/reading_202312-202406/</guid><description>&lt;p>2023年12月，出差海南，闲暇之余，志在饱览诗书，勿使光阴虚度也。&lt;/p></description></item><item><title>记一次数据竞争导致内存损坏的coredump - 问题诊断</title><link>https://importmengjie.github.io/posts/troubleshooting_data_races_coredump/</link><pubDate>Sun, 12 May 2024 14:53:51 +0800</pubDate><author><name>Author</name></author><guid>https://importmengjie.github.io/posts/troubleshooting_data_races_coredump/</guid><description>&lt;p>此次coredump断断续续查了约两个月才查明原因，迄今为止遇到最棘手的问题，深刻的体会到debug c/c++内存损坏是多么痛苦。为了debug还写了两个内存检测工具，可惜最终还是通过注释代码和人肉检查找到了问题根因，不过自制的检测工具还是能把模拟的demo检测出来问题，还是比较有成就感。&lt;/p></description></item><item><title>一些我竟然不知道的计算机相关知识 - 这都不知道「1」</title><link>https://importmengjie.github.io/posts/dont-even-know-that_1/</link><pubDate>Sun, 17 Dec 2023 00:15:58 +0800</pubDate><author><name>Author</name></author><guid>https://importmengjie.github.io/posts/dont-even-know-that_1/</guid><description>&lt;p>最近发现我竟然不知道或理解错误的基础知识，包含i++/++i的左右值问题、无符号与有符号的比较、Linux系统时区设置、coredump文件命名的问题。&lt;/p></description></item></channel></rss>