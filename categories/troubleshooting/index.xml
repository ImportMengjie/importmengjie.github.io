<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>troubleshooting - Category - ImportMengjie's Blog</title><link>https://importmengjie.github.io/categories/troubleshooting/</link><description>troubleshooting - Category - ImportMengjie's Blog</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>limengjie@hotmail.com (mengjie)</managingEditor><webMaster>limengjie@hotmail.com (mengjie)</webMaster><lastBuildDate>Sun, 12 May 2024 14:53:51 +0800</lastBuildDate><atom:link href="https://importmengjie.github.io/categories/troubleshooting/" rel="self" type="application/rss+xml"/><item><title>问题诊断: 记一次数据竞争导致内存损坏的coredump</title><link>https://importmengjie.github.io/posts/troubleshooting_data_races_coredump/</link><pubDate>Sun, 12 May 2024 14:53:51 +0800</pubDate><author>Author</author><guid>https://importmengjie.github.io/posts/troubleshooting_data_races_coredump/</guid><description>前置知识 内存管理器 如果想要对内存损坏有一个深刻意识需要对内存分配器有一个初步的认识，接下来对其做基本概念介绍。 堆内存（Heap Memory）</description></item><item><title>问题诊断: 小手册系列「1」</title><link>https://importmengjie.github.io/posts/troubleshooting_guide_1/</link><pubDate>Mon, 04 Dec 2023 11:39:42 +0800</pubDate><author>Author</author><guid>https://importmengjie.github.io/posts/troubleshooting_guide_1/</guid><description><![CDATA[popen后台符号&amp;导致僵尸进程 下面是popen执行shell命令获取命令输出打印到屏幕上的小例子 #include &lt;limits.h&gt;#include &lt;ostream&gt;#include &lt;stdio.h&gt;#include &lt;stdlib.h&gt;#include &lt;iostream&gt; using namespace std; int main(int argc, char *argv[]) { string files;]]></description></item><item><title>问题诊断: 记一次虚函数二进制兼容问题导致的coredump</title><link>https://importmengjie.github.io/posts/troubleshooting_guide_vtable-coredump/</link><pubDate>Thu, 21 Sep 2023 14:11:24 +0800</pubDate><author>mengjie</author><guid>https://importmengjie.github.io/posts/troubleshooting_guide_vtable-coredump/</guid><description>问题排查 问题表面 首先找到程序挂掉前打印出如下： terminate called after throwing an instance of &amp;#39;std::system_error&amp;#39; what(): Resource deadlock avoided Aborted google了下，大概率是因为以下两个原因: 线程自己join自己 =&amp;gt; 悖</description></item></channel></rss>